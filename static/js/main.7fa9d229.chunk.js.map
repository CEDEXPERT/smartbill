{"version":3,"sources":["spinner/Spinner.js","smartbill/LabeledInput.js","constants.js","smartbill/Form.js","cleaner.js","App.js","generator.js","index.js"],"names":["Spinner","className","LabeledInput","fileReader","label","name","type","onChange","useState","loading","setLoading","inputType","handleFileRead","e","content","result","id","file","target","files","length","FileReader","onloadend","readAsText","value","ACCOUNT_NUMBERS","initialState","doc401","acc4111","acc404","acc462","acc461","acc408","acc418","acc403","acc413","acc4091","acc4092","acc419","balanta","catalog","formInitialState","obj","forEach","n","ACCOUNTS_INITIAL_VALUE","Form","onGenerate","inputs","setInputs","disabled","setDisabled","useEffect","acc401","map","onClick","els","document","getElementsByClassName","i","cleanCatalog","clients","lines","split","cif","push","trim","client","index","c","str","toString","buf","console","log","concat","getCounter","splitLine","line","inString","parts","val","App","company","setCompany","setCatalog","setBalanta","values","cleanAccounts","keyName","dirtyAcc","startLine","cols","cleanLines","filter","slice","s","cleanFile","fCatalog","fBalanta","cleanBalanta","accounts","fileCatalogLines","fileBalantaLines","entitiesWithName","Object","keys","key","siDebit","siCredit","rDebit","rCredit","sFlDebit","sFCredit","mapAccounts","entity","linesToKeep","getAccountLines","linesForAcc","cod","row441","row4418","keep","accNr","includes","analyticLines","parseInt","generateBalanta","catalogFileContent","join","balantaFileContent","replace","element","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","click","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fa9d229.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Spinner.css\"\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React, { useState } from \"react\"\nimport Spinner from \"../spinner/Spinner\";\n\nconst LabeledInput = ( { label, name, type, onChange } ) => {\n    const [loading, setLoading] = useState(false)\n    let fileReader\n    const inputType = type ? type : \"file\"\n\n    const handleFileRead = (e) => {\n        const content = fileReader.result;\n        onChange(name, content)\n        setLoading(false)\n    };\n\n    const handleFileChosen = (file) => {\n        fileReader = new FileReader();\n        fileReader.onloadend = handleFileRead;\n        fileReader.readAsText(file);\n    };\n\n    const onInputChange = (e) => {\n        if (inputType === \"text\") {\n            onChange(name, e.target.value)\n            return\n        }\n        if (!e.target.files || e.target.files.length === 0 || e.target.files[0] === null)\n            return\n        setLoading(true)\n        handleFileChosen(e.target.files[0])\n    }\n\n\n    return (\n        <div className=\"inputContainer\">\n            <label>{label}</label>\n            <input className=\"input\" id={name} name={name} type={inputType} onChange={onInputChange}/>\n            {loading && <Spinner/>}\n        </div>\n    )\n}\n\nexport default LabeledInput\n","export const ACCOUNT_NUMBERS = [\n    401,\n    4111,\n    404,\n    462,\n    461,\n    408,\n    418,\n    403,\n    413,\n    4091,\n    4092,\n    419,\n]\n\nexport const ACCOUNTS_INITIAL_VALUE = () => {\n    const obj = {}\n    ACCOUNT_NUMBERS.forEach(n => obj[`acc${n}`] = '')\n    return obj\n}\n","import React, {useEffect, useState} from \"react\"\nimport LabeledInput from \"./LabeledInput\";\nimport {ACCOUNT_NUMBERS, ACCOUNTS_INITIAL_VALUE} from \"../constants\";\n\nconst initialState = {\n    name: '',\n    doc401: '',\n    acc4111: '',\n    acc404: '',\n    acc462: '',\n    acc461: '',\n    acc408: '',\n    acc418: '',\n    acc403: '',\n    acc413: '',\n    acc4091: '',\n    acc4092: '',\n    acc419: '',\n    balanta: '',\n    catalog: ''\n}\n\nconst formInitialState = {\n    name: '',\n    balanta: '',\n    catalog: '',\n    ...ACCOUNTS_INITIAL_VALUE()\n}\n\nconst Form = ( { onGenerate }) => {\n    const [inputs, setInputs] = useState(formInitialState)\n    const [disabled, setDisabled] = useState(false)\n\n    useEffect(() => {\n        const {name, balanta, acc401, acc4111, catalog } = inputs\n        if (!name || !acc401 || !acc4111 || !balanta || !catalog) {\n            setDisabled(true)\n        } else {\n            setDisabled(false)\n        }\n    }, [inputs])\n\n    const generate = () => {\n        onGenerate(inputs)\n    }\n\n    const onChange = (name, value) => {\n        setInputs({\n            ...inputs,\n            [name]: value\n        })\n    }\n    const reset = () => {\n        setInputs(initialState)\n        const els = document.getElementsByClassName('input')\n        for (let i = 0; i < els.length; i++)\n            els[i].value = null\n\n    }\n\n    return (\n        <div className=\"form\">\n            <LabeledInput name=\"name\" label=\"Nume(scurt, fara spatii)\" type=\"text\" onChange={onChange}/>\n            <LabeledInput name=\"catalog\" label=\"Fisier Catalog Parteneri\" onChange={onChange}/>\n            <LabeledInput name=\"balanta\" label=\"Fisier Balanta\" onChange={onChange}/>\n            {\n                ACCOUNT_NUMBERS.map(n => (\n                    <LabeledInput key={n} name={`acc${n}`} label={`Fisier ${n}`} onChange={onChange}/>\n                ))\n            }\n            <div className=\"buttonContainer\">\n                <button disabled={disabled} onClick={generate}>Import</button>\n                <button onClick={reset}>reset</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Form;\n","const START_LINE_4XX = 14\n\nconst cleanFile = (file, startLine, cols) => {\n    if (!file) return null\n    const lines = file.split(/\\r?\\n/);\n\n    const cleanLines = []\n\n    for (let i = startLine; i < lines.length; i++) {\n        let split = lines[i].split(',')\n        split = split.filter(i => !!i)\n\n        if (split.length === cols) {\n            cleanLines.push(split.slice(1, split.length).map(s => s.trim()))\n        }\n    }\n    return cleanLines\n}\n\nconst cleanAccountFile = (file) => cleanFile(file, START_LINE_4XX, 8)\n\nfunction getCounter(index) {\n    //000001\n    const str = index.toString()\n    let buf = ''\n    for (let i = 0; i < 6 - str.length; i++) {\n        buf += '0'\n    }\n    if (index === 110) {\n        console.log(str)\n        console.log(buf.concat(str))\n    }\n    return buf.concat(str)\n}\n\nconst cleanCatalog = (catalog) => {\n    const clients = []\n    const lines = catalog.split(/\\r?\\n/);\n\n    for (let i = 3; i < lines.length; i++) {\n        let split = lines[i].split(',')\n        const name = split[0]\n        const cif = split[2]\n        if (!!name) {\n            clients.push([name.trim(), cif.trim()])\n        }\n    }\n    //Denumire partener|CIF|401|404|462|4111|461|408|418|403|413|4091|4092|419|Platitor de TVA|TVA la incasare|Tara|Judetul|Reg com|Adresa|Localitate|Banca|Iban|Cod partener|Email|Pers contact|Telefon\n    return clients.map((client, index) => {\n        const c = getCounter(index + 1)\n        return [\n            client[0],\n            client[1],\n            `401.${c}`,\n            `404.${c}`,\n            `462.${c}`,\n            `4111.${c}`,\n            `461.${c}`,\n            `408.${c}`,\n            `418.${c}`,\n            `403.${c}`,\n            `413.${c}`,\n            `4091.${c}`,\n            `4092.${c}`,\n            `419.${c}`,\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            ''\n        ]\n\n    })\n}\n\nfunction splitLine(line) {\n    const length = line.length\n    let i = 0;\n    let inString = false\n    const parts = []\n    let val = ''\n\n    while (i < length) {\n        if (line[i] === \"\\\"\" && !inString) {\n            inString = true\n            val = val + line[i]\n        } else if (line[i] === \"\\\"\" && inString) {\n            inString = false\n            val = val + line[i]\n        }  else if (line[i] === ',' && inString) {\n            val = val + line[i]\n        } else if (line[i] === ',' && !inString) {\n            parts.push(val)\n            val = ''\n            inString = false\n        } else {\n            val = val + line[i]\n        }\n        i++\n    }\n    parts.push(val)\n    return parts\n}\n\nconst cleanBalanta = (balanta) => {\n    const lines = balanta.split(/\\r?\\n/)\n    const cleanLines = []\n    for (let i = 1; i < lines.length; i++) {\n        cleanLines.push(splitLine(lines[i]).map(s => s.trim()))\n    }\n    return cleanLines;\n}\n\nexport {\n    cleanAccountFile,\n    cleanCatalog,\n    cleanBalanta\n}\n\n\n","import React, {useState} from \"react\"\nimport './App.css';\nimport Form from \"./smartbill/Form\";\nimport {cleanAccountFile, cleanBalanta, cleanCatalog} from \"./cleaner\";\nimport {generateBalanta} from \"./generator\";\nimport {ACCOUNT_NUMBERS} from \"./constants\";\n\nconst catalogHeader = 'Denumire partener|CIF|401|404|462|4111|461|408|418|403|413|4091|4092|419|Platitor de TVA|TVA la incasare|Tara|Judetul|Reg com|Adresa|Localitate|Banca|Iban|Cod partener|Email|Pers contact|Telefon'\nconst balantaHeader = 'Contul|Denumire cont|Solduri initiale an debitoare|Solduri initiale an creditoare|Rulaje totale debitoare|Rulaje totale creditoare|Solduri finale debitoare|Solduri finale creditoare'\n\nconst App = () => {\n\n  const [company, setCompany] = useState('')\n  const [catalog, setCatalog ] = useState(null)\n  const [balanta, setBalanta ] = useState(null)\n\n  const downloadCatalog = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([catalog], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = `${company}Catalog.csv`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n\n  const downloadBalanta = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([balanta], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = `${company}Balanta.csv`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n\n  const generate = (values) => {\n    setCompany(values.name)\n\n    const cleanAccounts = {}\n\n    ACCOUNT_NUMBERS.forEach(n => {\n      const keyName = `acc${n}`\n      const dirtyAcc = values[keyName]\n      cleanAccounts[keyName] = cleanAccountFile(dirtyAcc)\n    })\n\n    const fCatalog = cleanCatalog(values.catalog)\n    const fBalanta = cleanBalanta(values.balanta)\n    const balanta = generateBalanta(cleanAccounts, fCatalog, fBalanta)\n\n    const catalogFileContent = catalogHeader\n        .concat('\\n')\n        .concat(fCatalog.map(line => line.join('|')).join('\\n'))\n    setCatalog(catalogFileContent)\n\n    const balantaFileContent = balantaHeader\n        .concat('\\n')\n        .concat(balanta.map(line => line.join('|')).join('\\n'))\n        .replace(/\"/g,'')\n        .replace(/,/g, '')\n    setBalanta(balantaFileContent)\n  }\n\n  return (\n    <div className=\"App\">\n      <Form onGenerate={generate}/>\n\n      <div className=\"outputs\">\n        <button onClick={downloadCatalog}>Download fisier catalog</button>\n        <button onClick={downloadBalanta}>Download fisier balanta</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n\n */\n\nimport {ACCOUNT_NUMBERS} from \"./constants\";\n\n/*\n      const keyName = `acc${n}`\n      cleanAccounts[keyName]\n */\n\nexport const generateBalanta = (accounts, fileCatalogLines, fileBalantaLines) => {\n    const entitiesWithName = {}\n    Object.keys(accounts).forEach(key => {\n        if (accounts[key] === null) {\n            entitiesWithName[key] = null\n        } else {\n            entitiesWithName[key] = accounts[key].map(split => ({\n                name: split[0],\n                siDebit: split[1],\n                siCredit: split[2],\n                rDebit: split[3],\n                rCredit: split[4],\n                sFlDebit: split[5],\n                sFCredit: split[6]\n            }))\n\n        }\n    })\n\n    const mapAccounts = {}\n    ACCOUNT_NUMBERS.forEach(n => {\n        mapAccounts[`acc${n}`] = {}\n    })\n\n    /*\n     0      client[0],\n     1      client[1],\n\n     2      `401.${c}`,\n\n     3      `404.${c}`,\n\n     4      `462.${c}`,\n\n     5      `4111.${c}`,\n\n     6      `461.${c}`,\n\n     7      `408.${c}`,\n\n     8      `418.${c}`,\n\n     9      `403.${c}`,\n\n     10      `413.${c}`,\n\n     11      `4091.${c}`,\n\n     12      `4092.${c}`,\n\n     13      `419.${c}`,\n\n     */\n\n    fileCatalogLines.forEach(split => {\n        const entity = {\n            name: split[0],\n            cif: split[1],\n            acc401: split[2],\n            acc404: split[3],\n            acc462: split[4],\n            acc4111: split[5],\n            acc461: split[6],\n            acc408: split[7],\n            acc418: split[8],\n            acc403: split[9],\n            acc413: split[10],\n            acc4091: split[11],\n            acc4092: split[12],\n            acc419: split[13],\n        }\n        ACCOUNT_NUMBERS.forEach(n => {\n            mapAccounts[`acc${n}`][entity.name] = entity[`acc${n}`]\n        })\n    })\n\n    // Reading Balanta file\n    // 0 Cont\n    // 1 AP\n    // 2 Den_cont\n    // 3 SIAD\n    // 4 SIAC\n    // 5 RPD\n    // 6 RPC\n    // 7 RLCD\n    // 8 RLCC\n    // 9 RCD\n    // 10 RCC\n    // 11 TVD\n    // 12 TVC\n    // 13 SFD\n    // 14 SFC\n    // 15 Unitate\n\n    let linesToKeep = []\n\n    const getAccountLines = (n) => {\n        if (!entitiesWithName[`acc${n}`])\n            return null\n        const linesForAcc = []\n        entitiesWithName[`acc${n}`].forEach(client => {\n            const cod = mapAccounts[`acc${n}`][client.name]\n            linesForAcc.push([cod, client.name, client.siDebit,\n                client.siCredit, client.rDebit,\n                client.rCredit, client.sFlDebit,\n                client.sFCredit])\n        })\n        return linesForAcc\n    }\n\n    let row441 = []\n    let row4418 = []\n\n    for (let i = 0; i < fileBalantaLines.length; i++) {\n        const split = fileBalantaLines[i]\n        const keep = [split[0], split[2], split[3], split[4], split[11], split[12], split[13], split[14]]\n\n        const accNr = split[0]\n\n        if (accNr && accNr.includes('CLASA')) {\n            continue\n        }\n\n        // 408D pastram\n        // 5121.1 pastram\n        // pastram randurile din balanta care au conturile de genul 408D? DA\n        // 441 trece in 4418\n\n        if (accNr === '441') {\n            row441 = keep\n            continue\n        }\n\n        if (accNr === '4418') {\n            row4418 = keep\n            continue\n        }\n\n        const analyticLines = getAccountLines(accNr)\n        if (analyticLines) {\n            linesToKeep = linesToKeep.concat(analyticLines)\n        } else {\n            linesToKeep.push(keep)\n        }\n    }\n\n    if (row441.length > 0 && row4418.length === 0) {\n        row441[0] = '4418'\n        linesToKeep.push(row441)\n    } else if (row441.length > 0 && row4418.length > 0) {\n        for (let i = 2; i < row4418.length; i++) {\n            row4418[i] = parseInt(row4418[i]) + parseInt(row441[i])\n        }\n        linesToKeep.push(row4418)\n    } else if (row441.length === 0 && row4418.length > 0) {\n        linesToKeep.push(row4418)\n    }\n\n    return linesToKeep\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}