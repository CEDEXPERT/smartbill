{"version":3,"sources":["spinner/Spinner.js","smartbill/LabeledInput.js","constants.js","smartbill/Form.js","cleaner.js","App.js","generator.js","index.js"],"names":["Spinner","className","LabeledInput","fileReader","label","name","type","onChange","useState","loading","setLoading","inputType","handleFileRead","e","content","result","id","accept","file","target","files","length","FileReader","onloadend","readAsText","value","ACCOUNT_NUMBERS","initialState","doc401","acc4111","acc404","acc462","acc461","acc408","acc418","acc403","acc413","acc4091","acc4092","acc419","balanta","catalog","formInitialState","obj","forEach","n","ACCOUNTS_INITIAL_VALUE","Form","onGenerate","onReset","inputs","setInputs","disabled","setDisabled","useEffect","acc401","map","onClick","els","document","getElementsByClassName","i","cleanCatalog","clients","lines","split","cif","push","trim","client","index","c","str","toString","buf","console","log","concat","getCounter","splitLine","line","inString","parts","val","App","company","setCompany","setCatalog","setBalanta","trezo","setTrezo","values","cleanAccounts","keyName","dirtyAcc","startLine","cols","cleanLines","filter","slice","s","cleanFile","fCatalog","requiredAccounts","presentAccounts","includes","cleanBalanta","fBalanta","all","accounts","fileCatalogLines","fileBalantaLines","entitiesWithName","Object","keys","key","siDebit","siCredit","rDebit","rCredit","sFlDebit","sFCredit","mapAccounts","entity","linesToKeep","getAccountLines","linesForAcc","cod","row441","row4418","keep","accNr","startsWith","analyticLines","left","replace","right","parseFloat","generateBalanta","catalogFileContent","join","balantaFileContent","trezoFileContent","window","alert","element","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","click","downloadCatalog","downloadBalanta","downloadTrezo","style","marginTop","fontSize","color","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2a91865.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Spinner.css\"\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-ring\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React, { useState } from \"react\"\nimport Spinner from \"../spinner/Spinner\";\n\nconst LabeledInput = ( { label, name, type, onChange } ) => {\n    const [loading, setLoading] = useState(false)\n    let fileReader\n    const inputType = type ? type : \"file\"\n\n    const handleFileRead = (e) => {\n        const content = fileReader.result;\n        onChange(name, content)\n        setLoading(false)\n    };\n\n    const handleFileChosen = (file) => {\n        fileReader = new FileReader();\n        fileReader.onloadend = handleFileRead;\n        fileReader.readAsText(file);\n    };\n\n    const onInputChange = (e) => {\n        if (inputType === \"text\") {\n            onChange(name, e.target.value)\n            return\n        }\n        if (!e.target.files || e.target.files.length === 0 || e.target.files[0] === null)\n            return\n        setLoading(true)\n        handleFileChosen(e.target.files[0])\n    }\n\n\n    return (\n        <div className=\"inputContainer\">\n            <label>{label}</label>\n            <input className=\"input\" id={name} name={name} type={inputType} accept=\".csv\" onChange={onInputChange}/>\n            {loading && <Spinner/>}\n        </div>\n    )\n}\n\nexport default LabeledInput\n","export const ACCOUNT_NUMBERS = [\n    401,\n    4111,\n    403,\n    404,\n    408,\n    413,\n    4091,\n    4092,\n    418,\n    419,\n    461,\n    462\n]\n\nexport const ACCOUNTS_INITIAL_VALUE = () => {\n    const obj = {}\n    ACCOUNT_NUMBERS.forEach(n => obj[`acc${n}`] = '')\n    return obj\n}\n","import React, {useEffect, useState} from \"react\"\nimport LabeledInput from \"./LabeledInput\";\nimport {ACCOUNT_NUMBERS, ACCOUNTS_INITIAL_VALUE} from \"../constants\";\n\nconst initialState = {\n    name: '',\n    doc401: '',\n    acc4111: '',\n    acc404: '',\n    acc462: '',\n    acc461: '',\n    acc408: '',\n    acc418: '',\n    acc403: '',\n    acc413: '',\n    acc4091: '',\n    acc4092: '',\n    acc419: '',\n    balanta: '',\n    catalog: ''\n}\n\nconst formInitialState = {\n    name: '',\n    balanta: '',\n    catalog: '',\n    ...ACCOUNTS_INITIAL_VALUE()\n}\n\nconst Form = ( { onGenerate, onReset }) => {\n    const [inputs, setInputs] = useState(formInitialState)\n    const [disabled, setDisabled] = useState(false)\n\n    useEffect(() => {\n        const {name, balanta, acc401, acc4111, catalog } = inputs\n        if (!name || !acc401 || !acc4111 || !balanta || !catalog) {\n            setDisabled(true)\n        } else {\n            setDisabled(false)\n        }\n    }, [inputs])\n\n    const generate = () => {\n        onGenerate(inputs)\n    }\n\n    const onChange = (name, value) => {\n        setInputs({\n            ...inputs,\n            [name]: value\n        })\n    }\n    const reset = () => {\n        onReset()\n        setInputs(initialState)\n        const els = document.getElementsByClassName('input')\n        for (let i = 0; i < els.length; i++)\n            els[i].value = null\n\n    }\n\n    return (\n        <div className=\"form\">\n            <LabeledInput name=\"name\" label=\"Nume(scurt, fara spatii)\" type=\"text\" onChange={onChange}/>\n            <LabeledInput name=\"catalog\" label=\"Fisier Catalog Parteneri\" onChange={onChange}/>\n            <LabeledInput name=\"balanta\" label=\"Fisier Balanta\" onChange={onChange}/>\n            {\n                ACCOUNT_NUMBERS.map(n => (\n                    <LabeledInput key={n} name={`acc${n}`} label={`Fisier ${n}`} onChange={onChange}/>\n                ))\n            }\n            <div className=\"buttonContainer\">\n                <button disabled={disabled} onClick={generate}>Generate migration files</button>\n                <button onClick={reset}>Reset inputs</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Form;\n","import {ACCOUNT_NUMBERS} from \"./constants\";\n\nconst START_LINE_4XX = 14\n\nconst cleanFile = (file, startLine, cols) => {\n    if (!file) return null\n    const lines = file.split(/\\r?\\n/);\n\n    const cleanLines = []\n\n    for (let i = startLine; i < lines.length; i++) {\n        let split = lines[i].split(',')\n        split = split.filter(i => !!i)\n\n        if (split.length === cols) {\n            cleanLines.push(split.slice(1, split.length).map(s => s.trim()))\n        }\n    }\n    return cleanLines\n}\n\nconst cleanAccountFile = (file) => cleanFile(file, START_LINE_4XX, 8)\n\nfunction getCounter(index) {\n    //000001\n    const str = index.toString()\n    let buf = ''\n    for (let i = 0; i < 6 - str.length; i++) {\n        buf += '0'\n    }\n    if (index === 110) {\n        console.log(str)\n        console.log(buf.concat(str))\n    }\n    return buf.concat(str)\n}\n\nconst cleanCatalog = (catalog) => {\n    const clients = []\n    const lines = catalog.split(/\\r?\\n/);\n\n    for (let i = 3; i < lines.length; i++) {\n        let split = lines[i].split(',')\n        const name = split[0]\n        const cif = split[2]\n        if (!!name) {\n            clients.push([name.trim(), cif.trim()])\n        }\n    }\n    //Denumire partener|CIF|401|404|462|4111|461|408|418|403|413|4091|4092|419|Platitor de TVA|TVA la incasare|Tara|Judetul|Reg com|Adresa|Localitate|Banca|Iban|Cod partener|Email|Pers contact|Telefon\n    return clients.map((client, index) => {\n        const c = getCounter(index + 1)\n        return [\n            client[0],\n            client[1],\n            `401.${c}`,\n            `404.${c}`,\n            `462.${c}`,\n            `4111.${c}`,\n            `461.${c}`,\n            `408.${c}`,\n            `418.${c}`,\n            `403.${c}`,\n            `413.${c}`,\n            `4091.${c}`,\n            `4092.${c}`,\n            `419.${c}`,\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            ''\n        ]\n\n    })\n}\n\nfunction splitLine(line) {\n    const length = line.length\n    let i = 0;\n    let inString = false\n    const parts = []\n    let val = ''\n\n    while (i < length) {\n        if (line[i] === \"\\\"\" && !inString) {\n            inString = true\n            val = val + line[i]\n        } else if (line[i] === \"\\\"\" && inString) {\n            inString = false\n            val = val + line[i]\n        }  else if (line[i] === ',' && inString) {\n            val = val + line[i]\n        } else if (line[i] === ',' && !inString) {\n            parts.push(val)\n            val = ''\n            inString = false\n        } else {\n            val = val + line[i]\n        }\n        i++\n    }\n    parts.push(val)\n    return parts\n}\n\nconst cleanBalanta = (balanta) => {\n    const lines = balanta.split(/\\r?\\n/)\n    const cleanLines = []\n    for (let i = 1; i < lines.length; i++) {\n        cleanLines.push(splitLine(lines[i]).map(s => s.trim()))\n    }\n\n    const requiredAccounts = ACCOUNT_NUMBERS.map(n => n.toString())\n\n    const presentAccounts = []\n\n    for (let i = 0; i < cleanLines.length; i++) {\n        if (requiredAccounts.includes(cleanLines[i][0])) {\n            presentAccounts.push(cleanLines[i][0])\n        }\n    }\n\n    return {\n        cleanLines,\n        presentAccounts\n    };\n}\n\nexport {\n    cleanAccountFile,\n    cleanCatalog,\n    cleanBalanta\n}\n\n\n","import React, {useState} from \"react\"\nimport './App.css';\nimport Form from \"./smartbill/Form\";\nimport {cleanAccountFile, cleanBalanta, cleanCatalog} from \"./cleaner\";\nimport {generateBalanta} from \"./generator\";\nimport {ACCOUNT_NUMBERS} from \"./constants\";\n\nconst catalogHeader = 'Denumire partener|CIF|401|404|462|4111|461|408|418|403|413|4091|4092|419|Platitor de TVA|TVA la incasare|Tara|Judetul|Reg com|Adresa|Localitate|Banca|Iban|Cod partener|Email|Pers contact|Telefon'\nconst balantaHeader = 'Contul|Denumire cont|Solduri initiale an debitoare|Solduri initiale an creditoare|Rulaje totale debitoare|Rulaje totale creditoare|Solduri finale debitoare|Solduri finale creditoare'\nconst trezoHeader = 'Contul Contabil'\n\nconst App = () => {\n\n  const [company, setCompany] = useState('')\n  const [catalog, setCatalog ] = useState(null)\n  const [balanta, setBalanta ] = useState(null)\n  const [trezo, setTrezo] = useState(null)\n\n  const reset = () => {\n    setCatalog(null)\n    setBalanta(null)\n    setTrezo(null)\n  }\n\n  const downloadCatalog = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([catalog], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = `${company}Catalog.csv`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n\n  const downloadBalanta = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([balanta], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = `${company}Balanta.csv`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const downloadTrezo = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([trezo], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = `${company}Trezo.csv`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n\n  const generate = (values) => {\n    setCompany(values.name)\n\n    const cleanAccounts = {}\n\n    ACCOUNT_NUMBERS.forEach(n => {\n      const keyName = `acc${n}`\n      const dirtyAcc = values[keyName]\n      cleanAccounts[keyName] = cleanAccountFile(dirtyAcc)\n    })\n\n    const fCatalog = cleanCatalog(values.catalog)\n    const { cleanLines: fBalanta, presentAccounts } = cleanBalanta(values.balanta)\n\n    let all = true\n    for (let i = 0; i < presentAccounts.length; i++) {\n      const keyName = `acc${presentAccounts[i]}`\n      if (!values[keyName]) {\n        all = false\n      }\n    }\n\n    if (!all) {\n      window.alert(`Conform balantei, este nevoie de fisiere pt conturile: ${presentAccounts.join(\",\")}`)\n      return\n    }\n\n    const { balanta, trezo } = generateBalanta(cleanAccounts, fCatalog, fBalanta)\n\n    const catalogFileContent = catalogHeader\n        .concat('\\n')\n        .concat(fCatalog.map(line => line.join('|')).join('\\n'))\n\n    setCatalog(catalogFileContent)\n\n    const balantaFileContent = balantaHeader\n        .concat('\\n')\n        .concat(balanta.map(line => line.join('|')).join('\\n'))\n        .replace(/\"/g,'')\n        .replace(/,/g, '')\n    setBalanta(balantaFileContent)\n\n    const trezoFileContent = trezoHeader\n        .concat('\\n')\n        .concat(trezo.join('\\n'))\n        .replace(/\"/g,'')\n\n    setTrezo(trezoFileContent)\n\n  }\n\n  const downloadFiles = () => {\n    downloadCatalog()\n    downloadBalanta()\n    downloadTrezo()\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Form onGenerate={generate} onReset={reset}/>\n\n      <div className=\"outputs\">\n        <button disabled={catalog === null} onClick={downloadFiles}>Download migration files</button>\n        {/*<button disabled={balanta === null} onClick={downloadBalanta}>Download fisier balanta</button>*/}\n        {/*<button disabled={trezo === null} onClick={downloadTrezo}>Download fisier Trezo</button>*/}\n      </div>\n      <span style={{marginTop: '50px', fontSize: '12px', color: 'white'}}>v0.13</span>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n\n */\n\nimport {ACCOUNT_NUMBERS} from \"./constants\";\n\n/*\n      const keyName = `acc${n}`\n      cleanAccounts[keyName]\n */\n\nexport const generateBalanta = (accounts, fileCatalogLines, fileBalantaLines) => {\n    const entitiesWithName = {}\n    Object.keys(accounts).forEach(key => {\n        if (accounts[key] === null) {\n            entitiesWithName[key] = null\n        } else {\n            entitiesWithName[key] = accounts[key].map(split => ({\n                name: split[0],\n                siDebit: split[1],\n                siCredit: split[2],\n                rDebit: split[3],\n                rCredit: split[4],\n                sFlDebit: split[5],\n                sFCredit: split[6]\n            }))\n\n        }\n    })\n\n    const mapAccounts = {}\n    ACCOUNT_NUMBERS.forEach(n => {\n        mapAccounts[`acc${n}`] = {}\n    })\n\n    /*\n     0      client[0],\n     1      client[1],\n\n     2      `401.${c}`,\n\n     3      `404.${c}`,\n\n     4      `462.${c}`,\n\n     5      `4111.${c}`,\n\n     6      `461.${c}`,\n\n     7      `408.${c}`,\n\n     8      `418.${c}`,\n\n     9      `403.${c}`,\n\n     10      `413.${c}`,\n\n     11      `4091.${c}`,\n\n     12      `4092.${c}`,\n\n     13      `419.${c}`,\n\n     */\n\n    fileCatalogLines.forEach(split => {\n        const entity = {\n            name: split[0],\n            cif: split[1],\n            acc401: split[2],\n            acc404: split[3],\n            acc462: split[4],\n            acc4111: split[5],\n            acc461: split[6],\n            acc408: split[7],\n            acc418: split[8],\n            acc403: split[9],\n            acc413: split[10],\n            acc4091: split[11],\n            acc4092: split[12],\n            acc419: split[13],\n        }\n        ACCOUNT_NUMBERS.forEach(n => {\n            mapAccounts[`acc${n}`][entity.name] = entity[`acc${n}`]\n        })\n    })\n\n    // Reading Balanta file\n    // 0 Cont\n    // 1 AP\n    // 2 Den_cont\n    // 3 SIAD\n    // 4 SIAC\n    // 5 RPD\n    // 6 RPC\n    // 7 RLCD\n    // 8 RLCC\n    // 9 RCD\n    // 10 RCC\n    // 11 TVD\n    // 12 TVC\n    // 13 SFD\n    // 14 SFC\n    // 15 Unitate\n\n    let linesToKeep = []\n\n    const getAccountLines = (n) => {\n        if (!entitiesWithName[`acc${n}`])\n            return null\n        const linesForAcc = []\n        entitiesWithName[`acc${n}`].forEach(client => {\n            const cod = mapAccounts[`acc${n}`][client.name]\n            linesForAcc.push([cod, client.name, client.siDebit,\n                client.siCredit, client.rDebit,\n                client.rCredit, client.sFlDebit,\n                client.sFCredit])\n        })\n        return linesForAcc\n    }\n\n    let row441 = []\n    let row4418 = []\n\n    const trezo = []\n\n    for (let i = 0; i < fileBalantaLines.length; i++) {\n        const split = fileBalantaLines[i]\n        const keep = [split[0], split[2], split[3], split[4], split[11], split[12], split[13], split[14]]\n\n        const accNr = split[0]\n\n        if (accNr && accNr.includes('CLASA')) {\n            continue\n        }\n\n        if (accNr && accNr.includes('TOT')) {\n            continue\n        }\n\n        // 408D pastram\n        // 5121.1 pastram\n        // pastram randurile din balanta care au conturile de genul 408D? DA\n        // 441 trece in 4418\n\n        if (accNr === '441') {\n            row441 = keep\n            continue\n        }\n\n        if (accNr === '4418') {\n            row4418 = keep\n            continue\n        }\n\n        if (accNr === '5121') {\n            keep[0] = '5121.001'\n        }\n\n        if (accNr === '5124') {\n            keep[0] = '5124.001'\n        }\n\n        if (accNr.startsWith('5') && accNr !== '581' && accNr !== '5311') {\n            trezo.push(keep[0])\n        }\n\n        const analyticLines = getAccountLines(accNr)\n        if (analyticLines) {\n            linesToKeep = linesToKeep.concat(analyticLines)\n        } else {\n            linesToKeep.push(keep)\n        }\n    }\n\n    if (row441.length > 0 && row4418.length === 0) {\n        row441[0] = '4418'\n        linesToKeep.push(row441)\n    } else if (row441.length > 0 && row4418.length > 0) {\n        for (let i = 2; i < row4418.length; i++) {\n            const left = row4418[i].replace(/\"/g, \"\").replace(/,/g, \"\")\n            const right = row441[i].replace(/\"/g, \"\").replace(/,/g, \"\")\n            row4418[i] = parseFloat(left) + parseFloat(right)\n        }\n        linesToKeep.push(row4418)\n    } else if (row441.length === 0 && row4418.length > 0) {\n        linesToKeep.push(row4418)\n    }\n\n    return {\n        balanta: linesToKeep,\n        trezo\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}